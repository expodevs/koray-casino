import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from "next/headers";

import DesktopHeader from "@/components/desktop/layout/Header";
import DesktopFooter from "@/components/desktop/layout/Footer";
import MobileHeader from "@/components/mobile/layout/Header";
import MobileFooter from "@/components/mobile/layout/Footer";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
                                       children,
                                   }: {
    children: React.ReactNode;
}) {
    const userAgent = headers().get("user-agent") || "";
    const isMobile = /mobile/i.test(userAgent);

    return (
        <html lang="en">
        <head>
            {isMobile
                ? <link rel="stylesheet" href="/styles/head-foot-mobile.css" />
                : <link rel="stylesheet" href="/styles/head-foot-desktop.css" />
            }
        </head>
        <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {isMobile ? (
            <>
                <MobileHeader />
                {children}
                <MobileFooter />
            </>
        ) : (
            <>
                <DesktopHeader />
                {children}
                <DesktopFooter />
            </>
        )}
        </body>
        </html>
    );
}
